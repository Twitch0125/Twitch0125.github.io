@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --flow-space: theme(spacing.3);
    --base-border: 1px solid theme(colors.body);
  }
}

@layer components {
  .blurb {
    font-size: theme(fontSize.2xl);
    font-family: theme(fontFamily.body);
    line-height: theme(lineHeight.7);
    letter-spacing: theme(letterSpacing.tighter);
  }

  .flow {
    @apply space-y-[var(--flow-space)];
  }

  .layout {
    padding: 0 min(theme(spacing.1), theme(spacing.4));
    height: 100vh;
    border: var(--base-border);

    @media screen(sm) {
      padding: 0 theme(spacing.6)
    }

    @media screen(lg) {}
  }

  .btn {
    @apply bg-background border border-body justify-center gap-2 transition-all duration-75 ease-in-out;
    display: flex;
    align-items: center;
    font-weight: theme(fontWeight.bold);
    letter-spacing: theme(letterSpacing.tight);
    line-height: theme(lineHeight.tight);
    padding: theme(spacing.3) theme(spacing.7);
    font-size: theme(fontSize.base);

    &-sm {
      padding: theme(spacing.2) theme(spacing.5);
      font-size: theme(fontSize.sm);
    }

    &:active {
      @apply bg-primary outline-none;
    }

    &-primary {
      @apply bg-primary shadow outline-none;
    }
  }

  .shadowed {
    background: transparent;
    position: relative;
    z-index: 1;
  }

  .shadowed:before {
    --shadowed-stroke-width: 1px;
    content: attr(data-shadowed-text);
    position: absolute;
    color: theme(colors.primary);
    z-index: 0;
    /* I wish I could use text stroke here, but depending on the font
     you can get some weird outlines. Text shadow just works better for my fonts */
    /* -webkit-text-stroke: 2px var(--c-text); */
    top: var(--shadowed-text-offset, -4px);
    left: var(--shadowed-text-offset, -4px);
    /* this text-shadow acts as an outside outline of the text */
    text-shadow: calc(var(--shadowed-stroke-width) * -1) calc(var(--shadowed-stroke-width) * -1) theme(colors.body),
      0 calc(var(--shadowed-stroke-width) * -1) theme(colors.body),
      var(--shadowed-stroke-width) calc(var(--shadowed-stroke-width) * -1) theme(colors.body),
      var(--shadowed-stroke-width) 0 theme(colors.body),
      var(--shadowed-stroke-width) var(--shadowed-stroke-width) theme(colors.body),
      0 var(--shadowed-stroke-width) theme(colors.body),
      calc(var(--shadowed-stroke-width) * -1) var(--shadowed-stroke-width) theme(colors.body),
      calc(var(--shadowed-stroke-width) * -1) 0 theme(colors.body);
  }
}

#__nuxt {
  @media screen(sm) {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
  }
}

b {
  font-weight: 600;
}

html {
  @apply font-body text-body;
}